Given an array of distinct elements. Find the third largest element in it.

Suppose you have A[] = {1, 2, 3, 4, 5, 6, 7}, its output will be 5 because it is the 3 largest element in the array A.

Example 1:

Input:
N = 5
A[] = {2,4,1,3,5}
Output: 3
Example 2:

Input:
N = 2
A[] = {10,2}
Output: -1
Your Task:
Complete the function thirdLargest() which takes the array a[] and the size of the array, n, as input parameters and returns the third largest element in the array. It return -1 if there are less than 3 elements in the given array.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ N ≤ 105
1 ≤ A[i] ≤ 105


Solution:

class Solution
{
    int thirdLargest(int a[], int n)
    {
	    int first, second, third;
	    
	    first = second = third = Integer.MIN_VALUE;
	    
	    if(n<=2)
	    {
	        return -1;
	    }
	    for(int i=0;i<n;i++)
	    {
	       if(a[i] > first)
	       {
	           first = a[i];
	       }
	    }
	    
	    for(int i =0 ; i<n;i++)
	    {
	        if(a[i]>second && a[i]< first)
	        second = a[i];
	    }
	    
	    for(int i =0; i<n; i++)
	    {
	        if(a[i] > third && a[i] < second)
	        third = a[i];
	    }
	    
	    return third;
    }
}


Steps : Above  we first find the largest in on traversal
	after that we try to find the second largest by cheaking the numbers which are greater than second and less than first and we did same for the
	third. Base case is if the length is less than 2 we return -1.